name: Caching and using dependencies in subsequent jobs

on: [push, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        working-directory: 01 Starting Project

      - name: Lint
        run: npm run lint
        working-directory: 01 Starting Project

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{  hashFiles('**/package-lock.json')  }}
      - name: Install dependencies
        run: npm ci
        working-directory: 01 Starting Project

      - name: Run tests
        run: npm run test
        working-directory: 01 Starting Project

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        working-directory: 01 Starting Project

      - name: Build
        run: npm run build
        working-directory: 01 Starting Project

      - name: Publish JS file name
        id: publish
        run: |
          JS_FILES=$(find "01 Starting Project/dist/assets" -name "*.js" -type f)
          if [ -z "$JS_FILES" ]; then
            echo "No JS files found."
            echo "script-file=none" >> "$GITHUB_OUTPUT"
          else
            FIRST_JS_FILE=$(echo "$JS_FILES" | head -n 1)
            echo "script-file=$FIRST_JS_FILE" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: 01 Starting Project/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: 01 Starting Project/dist

      - name: Output contents
        run: ls 01\ Starting\ Project/dist/assets

      - name: Print Output from Build
        run: echo "Deployed JS file is ${{ needs.build.outputs.script-file }}"

      - name: Deploy
        run: echo "Deploying"
